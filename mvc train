package MVC;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class TrainController
 */
@WebServlet("/TrainController")
public class TrainController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	TrainDAL td = new TrainDAL();

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public TrainController() {
		super();
		// TODO Auto-generated constructor stub
	}

	public void callDAL(HttpServletRequest request, HttpServletResponse response) {

		int pa1, pa2, pa3, pa4, pa5;
		String p1, p2, p3, p4, p5,pg1,pg2,pg3,pg4,pg5;

		try {
			String status = request.getParameter("status");
			// String status = "FromTo";
			if (status.equals("FromTo")) {
				String s[] = td.FromTo(response).split(",");
				for (String s1 : s) {
					response.getWriter().print("<option>" + s1 + "</option>" + "<br>");
				}
			}

			else if (status.equals("Trains")) {
				String from = request.getParameter("from");
				String to = request.getParameter("to");
				// String datee = request.getParameter("dates");
				String tran[] = td.Trains(from, to, response).split(",");
				for (String s1 : tran) {
					response.getWriter().print("<option>" + s1 + "</option>" + "<br>");
				}
			}

			else if (status.equals("Classes")) {

				int TrainNo = Integer.parseInt(request.getParameter("TrainNo"));
				// int TrainNo = 22824;
				String clas[] = td.TrainClass(TrainNo, response).split(",");
				for (String s1 : clas) {
					response.getWriter().print("<option>" + s1 + "</option>" + "<br>");
				}

			}

			else if (status.equals("Fare")) {
				String from = request.getParameter("from");
				String to = request.getParameter("to");
				String lsc = request.getParameter("lsc");
				System.out.println("Class is"+lsc);
				int TrainNo = Integer.parseInt(request.getParameter("TrainNo"));
				double classfare = td.TrainFareclass(lsc, TrainNo, response);
				System.out.println(classfare);
				double distfare = td.TrainFaredist(from, to, TrainNo, response);
				System.out.println(distfare);
//				
//				double TotalFare = distfare * classfare;
//				System.out.println(TotalFare);
				response.setContentType("text/html");
				p1 = request.getParameter("p1");
				p2 = request.getParameter("p2");
				p3 = request.getParameter("p3");
				p4 = request.getParameter("p4");
				p5 = request.getParameter("p5");
				pa1 = Integer.parseInt(request.getParameter("pa1"));
				pa2 = Integer.parseInt(request.getParameter("pa2"));
				pa3 = Integer.parseInt(request.getParameter("pa3"));
				pa4 = Integer.parseInt(request.getParameter("pa4"));
				pa5 = Integer.parseInt(request.getParameter("pa5"));
				pg1 = request.getParameter("pg1");
				pg2 = request.getParameter("pg2");
				pg3 = request.getParameter("pg3");
				pg4 = request.getParameter("pg3");
				pg5 = request.getParameter("pg4");
				Passengers pass1 = new Passengers(p1, pa1,pg1);
				Passengers pass2 = new Passengers(p2, pa2,pg2);
				Passengers pass3 = new Passengers(p3, pa3,pg3);
				Passengers pass4 = new Passengers(p4, pa4,pg4);
				Passengers pass5 = new Passengers(p5, pa5,pg5);

				ArrayList<Passengers> pass = new ArrayList<>();
				pass.add(pass1);
				pass.add(pass2);
				pass.add(pass3);
				pass.add(pass4);
				pass.add(pass5);
				BusinessLogicFare blf=new BusinessLogicFare();
				 List<Double> FinalfareList=blf.bbl(classfare,distfare,pass);
				//double TotalFare1 = 0;
//				for (Passengers y : pass) {
//
//					if (y.getage() > 10 && y.getage() < 80) {
//						TotalFare1 += TotalFare;
//					} else if (y.getage() > 80 || y.getage() < 10) {
//						TotalFare1 += TotalFare / 2;
//					}
//				}

				// Get the PrintWriter object to write the response
				double TotalFare1= blf.bblFinal(classfare,distfare,pass);
				PrintWriter out = response.getWriter();
				out.println("<script>document.getElementById('fare').value = " + TotalFare1 + ";</script>");

			}
			else if (status.equals("Save")) {
				String from = request.getParameter("from");
				String to = request.getParameter("to");
				String lsc = request.getParameter("lsc");
				int TrainNo = Integer.parseInt(request.getParameter("TrainNo"));
				String Trname = request.getParameter("TrainName");
			
				int Fare = Integer.parseInt(request.getParameter("fare"));
				System.out.println(from);
				System.out.println(to);
				System.out.println(lsc);
				System.out.println(Fare);
				
				p1 = request.getParameter("p1");
				p2 = request.getParameter("p2");
				p3 = request.getParameter("p3");
				p4 = request.getParameter("p4");
				p5 = request.getParameter("p5");
				pa1 = Integer.parseInt(request.getParameter("pa1"));
				pa2 = Integer.parseInt(request.getParameter("pa2"));
				pa3 = Integer.parseInt(request.getParameter("pa3"));
				pa4 = Integer.parseInt(request.getParameter("pa4"));
				pa5 = Integer.parseInt(request.getParameter("pa5"));
				pg1 = request.getParameter("pg1");
				pg2 = request.getParameter("pg2");
				pg3 = request.getParameter("pg3");
				pg4 = request.getParameter("pg3");
				pg5 = request.getParameter("pg4");
				Passengers pass1 = new Passengers(p1, pa1,pg1);
				Passengers pass2 = new Passengers(p2, pa2,pg2);
				Passengers pass3 = new Passengers(p3, pa3,pg3);
				Passengers pass4 = new Passengers(p4, pa4,pg4);
				Passengers pass5 = new Passengers(p5, pa5,pg5);
				
				 ArrayList<Passengers> pass = new ArrayList<>();
				 pass.add(pass1);
				 pass.add(pass2);
				 pass.add(pass3);
				 pass.add(pass4);
				 pass.add(pass5);
				 td.SaveDB(TrainNo, Trname, from, to, lsc, pass);
				 request.setAttribute("TrainNo", TrainNo);
				 request.setAttribute("TrainName", Trname);
				 request.setAttribute("From", from);
				 request.setAttribute("To", to);
				 request.setAttribute("TrainClass",lsc);
				 request.setAttribute("fare", Fare);
				 request.setAttribute("passenger1_name", p1);
				 request.setAttribute("passenger2_name", p2);
				 request.setAttribute("passenger3_name", p3);
				 request.setAttribute("passenger4_name", p4);
				 request.setAttribute("passenger5_name", p5);
				 request.setAttribute("passenger1_age", pa1);
				 request.setAttribute("passenger2_age", pa2);
				 request.setAttribute("passenger3_age", pa3);
				 request.setAttribute("passenger4_age", pa4);
				 request.setAttribute("passenger5_age", pa5);
				 
				 RequestDispatcher dispatcher = request.getRequestDispatcher("preview.jsp");
				 dispatcher.forward(request, response);
				 }
		} catch (Exception e) {

		}
	}

	

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		callDAL(request, response);
	}
}

package MVC;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.http.HttpServletResponse;

public class TrainDAL {
	public String FromTo(HttpServletResponse response) {
		String s1 = " ";
		try {
			Connection c = null;
			Class.forName("org.postgresql.Driver");

			String s = "";

			s = "jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";

			c = DriverManager.getConnection(s);
			Statement st = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
			ResultSet stt = st.executeQuery("select * from sow_stn");
			stt.absolute(0);
			String arr[] = {};
			while (stt.next()) {

				s1 = s1 + stt.getString(1) + ",";
			}
		} catch (Exception e) {
			System.out.println(e);
		}
		return s1;
	}

	public String Trains(String from, String to, HttpServletResponse response) {
		String dat = "";
		try {
			Connection c = null;

			Class.forName("org.postgresql.Driver");

			String s = "jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";

			c = DriverManager.getConnection(s);

			Statement st = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
			PreparedStatement p = c.prepareStatement(
					"select * from sow_trains where tr_no in(select tr_no  from sow_stn where stn_code =?  ) and tr_no in(select tr_no from sow_stn where stn_code =?) ");
			p.setString(1, from);
			p.setString(2, to);
			ResultSet stt = p.executeQuery();

			while (stt.next()) {
				for (int i = 1; i <= 2; i++) {
					dat += stt.getString(i) + " ";

				}
				dat += ",";

			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return dat;
	}

	public String TrainClass(int TrainNo, HttpServletResponse response) {
		String se = " ";
		try {
			Connection conn = null;

			String cs;
			Class.forName("org.postgresql.Driver");
			cs = "jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
			conn = DriverManager.getConnection(cs);
			Statement st = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
			ResultSet stt = st.executeQuery("select * from tn_tvl_classes where tr_no =" + TrainNo + " ");
			System.out.println("hello1");
			stt.absolute(0);
			while (stt.next()) {

				se += stt.getString(2) + ",";
			}
		} catch (Exception e) {
			System.out.println(e);
		}
		return se;
	}

	public int TrainFaredist(String from, String to, int TrainNo, HttpServletResponse response) {

		// dist, class cost
		int faredist = 0;
		try {
			Connection c = null;
			Class.forName("org.postgresql.Driver");

			String s = "";
			s = "jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
			c = DriverManager.getConnection(s);

			Statement st = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
			Statement st1 = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
			Statement st2 = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
			Statement st3 = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

			ResultSet stt = st.executeQuery("select * from sow_stn_dis");
			ResultSet stt3 = st1.executeQuery("select * from sow_stn_dis");
			stt.absolute(0);
			stt3.absolute(0);
			int dist = 0;
			while (stt.next()) {

				// int TrainNo = Integer.parseInt(request.getParameter("TrainNo"));
				System.out.println(stt.getString(1));

				if (stt.getString(1).equals(from)) {

					System.out.println("dist is" + dist);
					while (stt3.next()) {

						if ((stt3.getString(2).equals(to))) {
							System.out.println("each dist" + (stt3.getInt(3)));
							dist = dist + stt3.getInt(3);
							break;
						} else {
							System.out.println("each dist" + (stt3.getInt(3)));
							dist = dist + stt3.getInt(3);
						}

					}

				}
			}

			System.out.println("dist is" + dist);
			stt.close();
			ResultSet stt1 = st.executeQuery(
					"select * from sow_tr_fares where far_dist=(select min(far_dist) from sow_tr_fares where far_dist>="
							+ dist + ")");
			stt1.absolute(1);
			System.out.println("fare" + stt1.getInt(2));
			faredist = stt1.getInt(2);

			// response.setContentType("text/html");
			//
			// // Get the PrintWriter object to write the response
			// PrintWriter out = response.getWriter();
			//
			// out.println("<script>document.getElementById('fare').value = " + TotalFare + ";</script>");

		} catch (Exception e) {
			System.out.println(e);
		}
		return faredist;

	}

	public double TrainFareclass(String clss, int TrainNo, HttpServletResponse response) {
		double farefactor = 0.0;
		// dist, class cost
		try {
			Connection c = null;
			Class.forName("org.postgresql.Driver");

			String s = "";
			s = "jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
			c = DriverManager.getConnection(s);

			Statement st = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
			Statement st1 = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
			Statement st2 = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
			Statement st3 = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

			ResultSet stt2 = st.executeQuery(
					"select * from tn_tvl_classes where tr_no=" + TrainNo + " and tr_tvl_class='" + clss + "'");
			stt2.absolute(1);
			farefactor = stt2.getDouble(3);

			// response.setContentType("text/html");
			//
			// // Get the PrintWriter object to write the response
			// PrintWriter out = response.getWriter();
			//
			// out.println("<script>document.getElementById('fare').value = " + TotalFare + ";</script>");

		} catch (Exception e) {
			System.out.println(e);
		}
		return farefactor;
	}

	public void SaveDB(int Trno, String Trname, String from, String to, String cls, ArrayList<Passengers> pass) {
		try {
			Connection c = null;
			Class.forName("org.postgresql.Driver");

			String s = "";
			s = "jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
			c = DriverManager.getConnection(s);
			PreparedStatement statement = null;
			for (Passengers ps : pass) {
				String sql = "INSERT INTO tickets (name , age  ,fromst ,Tost,TrainNo ,TrainName ,classtr ) VALUES (?,?,?,?,?,?,?)";

				// Create the prepared statement
				statement = c.prepareStatement(sql);

				// Set the parameter values
				statement.setString(1, ps.getName());
				statement.setInt(2, ps.getage());

				statement.setString(3, from);
				statement.setString(4, to);
				statement.setInt(5, Trno);
				statement.setString(6, Trname);
				statement.setString(7, cls);
			}
			TicketModel tm = new TicketModel(Trname, Trno, from, to, cls, pass);

		} catch (Exception e) {

		}

	}

}

package MVC;

import java.util.ArrayList;

public class TicketModel {
	String TrainName;
	int Trainno;
	String cls;
	String from;
	String to;
	ArrayList<Passengers> pass;

	TicketModel(String Trn, int trno, String cls, String from, String to, ArrayList<Passengers> pass) {
		this.TrainName = Trn;
		this.Trainno = trno;
		this.cls = cls;
		this.from = from;
		this.to = to;

	}

	public String getTrainName() {
		return TrainName;
	}

	public void setTrainName(String Trn) {
		this.TrainName = Trn;
	}

	public int getTrainno() {
		return Trainno;
	}

	public void setTrainno(int trno) {
		this.Trainno = trno;
	}

	public String getcls() {
		return cls;
	}

	public void setcls(String cls) {
		this.cls = cls;
	}

	public String getfrom() {
		return from;
	}

	public void setfrom(String from) {
		this.from = from;
	}

	public String getto() {
		return to;
	}

	public void setto(String to) {
		this.to = to;
	}
}

package MVC;

public class Passengers {
	String name;
	int age;
String gender;
	Passengers(String pn, int pa,String pg) {
		this.name = pn;
		this.age = pa;
		this.gender=pg;
	}

	public String getName() {
		return name;
	}

	public int getage() {
		return age;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setage(int age) {
		this.age = age;
	}
	public void setGender(String gender) {
		this.gender = gender;
	}
	public String getGender() {
		return gender;
	}

	
	
}


<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">

<title>Railway Reservation</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
</head>
<body>
<center>
<h1>Train Reservation</h1></center>


<script>
function fun1(){
	var status="FromTo";
	$.ajax({
	//	url:'FromToTrainServlet',
		url:'TrainController',
		method:'POST',
		data:{
		status:status
		},
		success: function(resultText){
			$('#results').html(resultText);
			$('#resultss').html(resultText);
			
		},
		error:function(jqXHR,exception){
			console.log('Error Occured!');
		}
	})
}</script>
<center>
From : <Select id="results"  ></Select>
To : <Select id="resultss" Onchange="fun()"></Select>
</center>
<center><br><br>
Date:<input type="text" id="date"/><br><br></center>
<center><button onclick="fun1()">submit</button></center>
<script>
function fun(){
	var from=$('#results').val();
	var to=$('#resultss').val();
	var dates=$('#date').val();
	var status="Trains";
	$('#From').val(from);
	$('#To').val(to);
	
	$.ajax({
		success: function (resultText) {
            $('#resultw').html(resultText);
         },
         error: function (jqXHR, exception) {
             console.log('Error occured!!');
          }
	})
	$.ajax({
		
		//url:'TrainsServlet',
		url:'TrainController',
		method:'POST',
		data:{
			from:from,to:to,status:status
		},
        success: function (resultText) {
            $('#resultw').html(resultText);
         },
         error: function (jqXHR, exception) {
             console.log('Error occured!!');
          }
	})
	
}
</script><br><br>
<center><Select id="resultw" onChange="fun2()">
</Select></center>
<center>
Class: <Select id="resultClass" ></Select>

</center>
<form  >
<center><h1>Train Details</h1></center>
<center>

Train Number:<input type="text" name="TrainNo" id="TrainNo"/><br><br>
Train Name:<input type="text" name="TrainName" id="TrainName"/><br><br>
From:<input type="text" name="From" id="From"/><br><br>
To:<input type="text" name="To" id="To"/><br><br>
Train Class:<input type="text" name="TrainClass" id="TrainClass"/><br><br>
Fare:<input type="text" name="fare" id="fare" /><br><br>


  <h2>Passenger 1:</h2>
 
  Name:<input type="text" id="passenger1_name" name="passenger1_name" pattern="[A-Za-z]+" title="Please enter a valid name (text only)" required>
  <br>
  <label for="passenger1_age">Age:</label>
  <input  id="passenger1_age" name="passenger1_age" type="number" min="1" max="119" title="Please enter a valid age (0-119)" required>
  <br>
  <label><input type="radio" name="passenger1_gender" id="passenger1_gender" value="Male" onclick="updateGenderTextField(this.value)">Male</label>
  <label><input type="radio" name="passenger1_gender" id="passenger1_gender" value="Female" onclick="updateGenderTextField(this.value)">Female</label>
   <h2>Passenger 2:</h2>
  <label for="passenger2_name">Name:</label>
  <input type="text" id="passenger2_name" name="passenger2_name" pattern="[A-Za-z]+" title="Please enter a valid name (text only)" required>
  <br>
  <label for="passenger2_age">Age:</label>
  <input type="number" min="1" max="119" title="Please enter a valid age (0-119)" required id="passenger2_age" name="passenger2_age">
  <br>
  <label><input type="radio" name="passenger2_gender" id="passenger2_gender" value="Male" onclick="updateGenderTextField(this.value)">Male</label>
  <label><input type="radio" name="passenger2_gender" id="passenger2_gender" value="Female" onclick="updateGenderTextField(this.value)">Female</label>
  <br>

  <!-- Repeat the above fields for Passenger 2, Passenger 3, Passenger 4, and Passenger 5 -->

  <h2>Passenger 3:</h2>
  <label for="passenger3_name">Name:</label>
  <input type="text" id="passenger3_name" name="passenger3_name" pattern="[A-Za-z]+" title="Please enter a valid name (text only)" required>
  <br>
  <label for="passenger3_age">Age:</label>
  <input type="number" min="1" max="119" title="Please enter a valid age (0-119)" required id="passenger3_age" name="passenger3_age">
  <br>
  <label><input type="radio" name="passenger3_gender" id="passenger3_gender" value="Male" onclick="updateGenderTextField(this.value)">Male</label>
  <label><input type="radio" name="passenger3_gender"  id="passenger3_gender"value="Female" onclick="updateGenderTextField(this.value)">Female</label>
  <br>

  <h2>Passenger 4:</h2>
  <label for="passenger4_name">Name:</label>
  <input type="text" id="passenger4_name" name="passenger4_name" pattern="[A-Za-z]+" title="Please enter a valid name (text only)" required>
  <br>
  <label for="passenger4_age">Age:</label>
  <input type="number" min="1" max="119" title="Please enter a valid age (0-119)" required id="passenger4_age" name="passenger4_age">
  <br>
  <label><input type="radio" name="passenger4_gender" id="passenger4_gender" value="Male" onclick="updateGenderTextField(this.value)">Male</label>
  <label><input type="radio" name="passenger4_gender"  id="passenger4_gender" value="Female" onclick="updateGenderTextField(this.value)">Female</label>
  <br>
<h2>Passenger 5:</h2>
  <label for="passenger5_name">Name:</label>
  <input type="text" id="passenger5_name" name="passenger5_name" pattern="[A-Za-z]+" title="Please enter a valid name (text only)" required>
  <br>
  <label for="passenger5_age">Age:</label>
  <input type="number" min="1" max="119" title="Please enter a valid age (0-119)" id="passenger5_age" name="passenger5_age" onChange="fun4class()">
  <br>
   <label><input type="radio" name="passenger5_gender" id="passenger5_gender" value="Male" >Male</label>
  <label><input type="radio" name="passenger5_gender" id="passenger5_gender" value="Female" >Female</label>
  <br>





 
 
</center>
</form>

<center><button onclick="SavePreview()">Submit</button></center>

<script>
function fun2(){
	var arr= $('#resultw').val().split(" ");
	$('#TrainNo').val(arr[0]);
	$('#TrainName').val(arr[1]);
	//$('#TrainClass').val(" ");
	var status="Classes";
	$.ajax({
		//url:'TrainClassServlet',
		url:'TrainController',
		method:'POST',
		data:{
			TrainNo:arr[0],status:status
		},
		 success: function(resultText) {
		      $('#resultClass').html(resultText);
		    },
		    error: function(jqXHR, exception) {
		      console.log('Error Occurred!');
		    }
		
       
	})
	
}
</script>



<script>
function fun4class(){
	var arr= $('#resultClass').val();
	var arr1= $('#resultw').val().split(" ");
	var from=$('#results').val();
	var to=$('#resultss').val();
	var dates=$('#date').val();
	var p1age=$('#passenger1_age').val();
	var p2age=$('#passenger2_age').val();
	var p3age=$('#passenger3_age').val();
	var p4age=$('#passenger4_age').val();
	var p5age=$('#passenger5_age').val();
	var p1n=$('#passenger1_name').val();
	var p2n=$('#passenger2_name').val();
	var p3n=$('#passenger3_name').val();
	var p4n=$('#passenger4_name').val();
	var p5n=$('#passenger5_name').val();
	
	var pg1=$('#passenger1_gender').val();
	var pg2=$('#passenger2_gender').val();
	var pg3=$('#passenger3_gender').val();
	var pg4=$('#passenger4_gender').val();
	var pg5=$('#passenger5_gender').val();
	var status="Fare";
	$('#TrainClass').val(arr);
	
	
	$.ajax({
		//url:'TrainFareServlet',
		url:'TrainController',
		method:'POST',
		data:{
			from:from,to:to,TrainNo:arr1[0],lsc:arr,pg1:pg1,pg2:pg2,pg3:pg3,pg4:pg4,pg5:pg5,pa1:p1age,pa2:p2age,pa3:p3age,pa4:p4age,pa5:p5age,p1:p1n,p2:p2n,p3:p3n,p4:p4n,p5:p5n,status:status
		},
	
	 success: function(resultText) {
		 $('#passenger5_age').html(resultText);
		    },
		    error: function(jqXHR, exception) {
		      console.log('Error Occurred!');
		    }
	})
}
</script>
<script>
function SavePreview(){
	var arr= $('#TrainClass').val();
	var arr1= $('#resultw').val().split(" ");
	var from=$('#results').val();
	var to=$('#resultss').val();
	var dates=$('#date').val();
	var p1age=$('#passenger1_age').val();
	var p2age=$('#passenger2_age').val();
	var p3age=$('#passenger3_age').val();
	var p4age=$('#passenger4_age').val();
	var p5age=$('#passenger5_age').val();
	var p1n=$('#passenger1_name').val();
	var p2n=$('#passenger2_name').val();
	var p3n=$('#passenger3_name').val();
	var p4n=$('#passenger4_name').val();
	var p5n=$('#passenger5_name').val();
	var TrainName=$('#TrainName').val();
	var fare=$("#fare").val();
	var status="Save";
	
	
	
	$.ajax({
		//url:'TrainFareServlet',
		url:'TrainController',
		method:'POST',
		data:{
			from:from,to:to,TrainNo:arr1[0],lsc:arr,fare:fare,pa1:p1age,pa2:p2age,pa3:p3age,pa4:p4age,pa5:p5age,p1:p1n,p2:p2n,p3:p3n,p4:p4n,p5:p5n,status:status
		},
	
	
	})
}
</script>

<script>
function fun5pass(){
	var arr= $('#TrainNo').val();
	var arr1= $('#TrainName').val();
	var from=$('#From').val();
	var to=$('#To').val();
	var dates=$('#TrainClass').val();
	var datess=$('#fare').val();
	
	
	
	
	$.ajax({
		//url:'PassengerServlet',
		url:'TrainController',
		method:'POST',
		data:{
			TrainNo:arr,TrainName:arr1,From:from,To:to,TrainClass:dates,fare:datess
		}
		
	
	
	})
}
</script>
<script >
function fares() {
    $.ajax({
       // url: "TrainFareServlet",
       url:'TrainController',
        type: "POST",
        success: function (response) {
        
        	if(response){
  			  var fare = response;     
            $('#fare').val(fare);
           
        	}
        	else{
        		alert("Error");
        	}
           
        },
        error: function (xhr, status, error) {
            alert("An error occurred while fetching the record: " + error);
        }
    });
}</script>


<script>
  function updateGenderTextField(value) {
    var genderTextField = document.getElementById("genderTextField");
    genderTextField.value = value;
  }

  </script>

   

</body>
</html>


<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<table>
  <tr>
    <th>Train Number</th>
    <th>Train Name</th>
    <th>From</th>
    <th>To</th>
    <th>Class</th>
    <th>Fare</th>
  </tr>
  <tr>
    <td><%= request.getAttribute("TrainNo") %></td>
    <td><%= request.getAttribute("TrainName") %></td>
    <td><%= request.getAttribute("From") %></td>
    <td><%= request.getAttribute("To") %></td>
    <td><%= request.getAttribute("TrainClass") %></td>
    <td><%= request.getAttribute("fare") %></td>
  </tr>
</table>
<br>
<table>
  <tr>
    <th>Passenger Name</th>
    <th>Passenger Age</th>
  </tr>
  <tr>
    <td><%= request.getAttribute("passenger1_name") %></td>
    <td><%= request.getAttribute("passenger1_age") %></td>
  </tr>
  <tr>
    <td><%= request.getAttribute("passenger2_name") %></td>
    <td><%= request.getAttribute("passenger2_age") %></td>
  </tr>
  <tr>
 <td><%= request.getAttribute("passenger3_name") %></td>
    <td><%= request.getAttribute("passenger3_age") %></td>
  </tr>
  <tr>
    <td><%= request.getAttribute("passenger4_name") %></td>
    <td><%= request.getAttribute("passenger4_age") %></td>
  </tr>
  <tr>
    <td><%= request.getAttribute("passenger5_name") %></td>
    <td><%= request.getAttribute("passenger5_age") %></td>
  </tr>
</body>
</html>

package MVC;

import java.util.ArrayList;
import java.util.List;

public class BusinessLogicFare {
TrainDAL td= new TrainDAL();
public List<Double> bbl(double classfare,double distfare,ArrayList<Passengers> pass) {
	
	
	 List<Double> fareList = new ArrayList<>();
	for (Passengers y : pass) {
		double TotalFare = distfare * classfare;
		if (y.getage() > 0 && y.getage() < 6) {
			TotalFare = 0;
		} else if (y.getage() > 5 && y.getage() < 13) {
			TotalFare = TotalFare / 2;
		}
		else if(y.getage()>=65 && y.getGender().equals("Male")) {
			TotalFare = TotalFare-(TotalFare / 4);
		}
		else if(y.getage()>=58 && y.getGender().equals("Female")) {
			TotalFare = TotalFare-(TotalFare / 4);
		}
		fareList.add(TotalFare);
		
	}

	return fareList;
	
}
public double bblFinal(double classfare,double distfare,ArrayList<Passengers> pass) {
	double TotalFare = distfare * classfare;
	
	
	for (Passengers y : pass) {

		if (y.getage() > 0 && y.getage() < 6) {
			TotalFare += 0;
		} else if (y.getage() > 5 && y.getage() < 13) {
			TotalFare += TotalFare / 2;
		}
		else if(y.getage()>=65 && y.getGender().equals("Male")) {
			TotalFare += TotalFare-(TotalFare / 4);
		}
		else if(y.getage()>=58 && y.getGender().equals("Female")) {
			TotalFare += TotalFare-(TotalFare / 4);
		}
		
		
	}

	return TotalFare;
	
}
}
